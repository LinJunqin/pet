<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lin.pet.dao.AdminMapper">
  <resultMap id="BaseResultMap" type="com.lin.pet.entity.Admin">
    <constructor>
      <idArg column="admin_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="admin_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="admin_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modified_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    admin_id, admin_name, admin_password, create_time, modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin
    where admin_id = #{adminId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lin.pet.entity.Admin">
    insert into admin (admin_id, admin_name, admin_password, 
      create_time, modified_time)
    values (#{adminId,jdbcType=BIGINT}, #{adminName,jdbcType=VARCHAR}, #{adminPassword,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lin.pet.entity.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="adminPassword != null">
        admin_password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into admin (admin_id, admin_name, admin_password, 
      create_time, modified_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.adminId,jdbcType=BIGINT}, #{item.adminName,jdbcType=VARCHAR}, #{item.adminPassword,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifiedTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into admin
    (admin_id, admin_name, admin_password, create_time, modified_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.adminId != null">
          #{item.adminId,jdbcType=BIGINT},
        </if>
        <if test="item.adminId == null">
          NULL,
        </if>
        <if test="item.adminName != null">
          #{item.adminName,jdbcType=VARCHAR},
        </if>
        <if test="item.adminName == null">
          NULL,
        </if>
        <if test="item.adminPassword != null">
          #{item.adminPassword,jdbcType=VARCHAR},
        </if>
        <if test="item.adminPassword == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.modifiedTime != null">
          #{item.modifiedTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.modifiedTime == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.pet.entity.Admin">
    update admin
    <set>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        admin_password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.pet.entity.Admin">
    update admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where admin_id = #{adminId,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update admin
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="adminName =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.adminId} then #{item.adminName}
        </foreach>
      </trim>
      <trim prefix="adminPassword =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.adminId} then #{item.adminPassword}
        </foreach>
      </trim>
      <trim prefix="createTime =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.adminId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="modifiedTime =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.adminId} then #{item.modifiedTime}
        </foreach>
      </trim>
    </trim>
    where admin_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.adminId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update admin
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="adminName =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.adminName != null ">
            when  #{item.adminId} then #{item.adminName}
          </if>
          <if test="item.adminName == null ">
            when  #{item.adminId} then admin.admin_name
          </if>
        </foreach>
      </trim>
      <trim prefix="adminPassword =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.adminPassword != null ">
            when  #{item.adminId} then #{item.adminPassword}
          </if>
          <if test="item.adminPassword == null ">
            when  #{item.adminId} then admin.admin_password
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.adminId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.adminId} then admin.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="modifiedTime =case adminId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.modifiedTime != null ">
            when  #{item.adminId} then #{item.modifiedTime}
          </if>
          <if test="item.modifiedTime == null ">
            when  #{item.adminId} then admin.modified_time
          </if>
        </foreach>
      </trim>
    </trim>
    where admin_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.adminId} 
    </foreach>
  </update>
</mapper>