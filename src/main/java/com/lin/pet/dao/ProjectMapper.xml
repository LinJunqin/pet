<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lin.pet.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.lin.pet.entity.Project">
    <constructor>
      <idArg column="project_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="hospital_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_deleted" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modified_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="value" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    project_id, hospital_id, title, content, is_deleted, create_time, modified_time, 
    value
  </sql>

  <resultMap id="ProjectDTO" type="com.lin.pet.entity.dto.output.ProjectDTO">
    <constructor>
      <idArg column="project_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="value" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    </constructor>
  </resultMap>
  <sql id="ProjectDTO">
    project_id,title, value
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=BIGINT}
  </select>

  <select id="selectByHospitalId" resultType="java.lang.String" parameterType="Long">
      select title
      from project
      where hospital_id = #{hospitalId,jdbcType=BIGINT}
    </select>


  <select id="selectDetailByHospitalId" resultMap="ProjectDTO" parameterType="Long">
    select
    <include refid="ProjectDTO"/>
    from project
    where hospital_id = #{hospitalId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project
    where project_id = #{projectId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lin.pet.entity.Project">
    insert into project (project_id, hospital_id, title, 
      content, is_deleted, create_time, 
      modified_time, value)
    values (#{projectId,jdbcType=BIGINT}, #{hospitalId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifiedTime,jdbcType=TIMESTAMP}, #{value,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.lin.pet.entity.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="hospitalId != null">
        hospital_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="hospitalId != null">
        #{hospitalId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="value != null">
        #{value,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into project (project_id, hospital_id, title, 
      content, is_deleted, create_time, 
      modified_time, value)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.projectId,jdbcType=BIGINT}, #{item.hospitalId,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR}, 
        #{item.content,jdbcType=VARCHAR}, #{item.isDeleted,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.modifiedTime,jdbcType=TIMESTAMP}, #{item.value,jdbcType=DECIMAL})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into project
    (project_id, hospital_id, title, content, is_deleted, create_time, modified_time, 
      value)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.projectId != null">
          #{item.projectId,jdbcType=BIGINT},
        </if>
        <if test="item.projectId == null">
          NULL,
        </if>
        <if test="item.hospitalId != null">
          #{item.hospitalId,jdbcType=BIGINT},
        </if>
        <if test="item.hospitalId == null">
          NULL,
        </if>
        <if test="item.title != null">
          #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.title == null">
          NULL,
        </if>
        <if test="item.content != null">
          #{item.content,jdbcType=VARCHAR},
        </if>
        <if test="item.content == null">
          NULL,
        </if>
        <if test="item.isDeleted != null">
          #{item.isDeleted,jdbcType=TINYINT},
        </if>
        <if test="item.isDeleted == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.modifiedTime != null">
          #{item.modifiedTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.modifiedTime == null">
          NULL,
        </if>
        <if test="item.value != null">
          #{item.value,jdbcType=DECIMAL},
        </if>
        <if test="item.value == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.pet.entity.Project">
    update project
    <set>
      <if test="hospitalId != null">
        hospital_id = #{hospitalId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=DECIMAL},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.pet.entity.Project">
    update project
    set hospital_id = #{hospitalId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      value = #{value,jdbcType=DECIMAL}
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update project
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="hospitalId =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.hospitalId}
        </foreach>
      </trim>
      <trim prefix="title =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.title}
        </foreach>
      </trim>
      <trim prefix="content =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.content}
        </foreach>
      </trim>
      <trim prefix="isDeleted =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.isDeleted}
        </foreach>
      </trim>
      <trim prefix="createTime =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="modifiedTime =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.modifiedTime}
        </foreach>
      </trim>
      <trim prefix="value =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.projectId} then #{item.value}
        </foreach>
      </trim>
    </trim>
    where project_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.projectId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update project
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="hospitalId =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.hospitalId != null ">
            when  #{item.projectId} then #{item.hospitalId}
          </if>
          <if test="item.hospitalId == null ">
            when  #{item.projectId} then project.hospital_id
          </if>
        </foreach>
      </trim>
      <trim prefix="title =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.title != null ">
            when  #{item.projectId} then #{item.title}
          </if>
          <if test="item.title == null ">
            when  #{item.projectId} then project.title
          </if>
        </foreach>
      </trim>
      <trim prefix="content =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.content != null ">
            when  #{item.projectId} then #{item.content}
          </if>
          <if test="item.content == null ">
            when  #{item.projectId} then project.content
          </if>
        </foreach>
      </trim>
      <trim prefix="isDeleted =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.isDeleted != null ">
            when  #{item.projectId} then #{item.isDeleted}
          </if>
          <if test="item.isDeleted == null ">
            when  #{item.projectId} then project.is_deleted
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.projectId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.projectId} then project.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="modifiedTime =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.modifiedTime != null ">
            when  #{item.projectId} then #{item.modifiedTime}
          </if>
          <if test="item.modifiedTime == null ">
            when  #{item.projectId} then project.modified_time
          </if>
        </foreach>
      </trim>
      <trim prefix="value =case projectId" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.value != null ">
            when  #{item.projectId} then #{item.value}
          </if>
          <if test="item.value == null ">
            when  #{item.projectId} then project.value
          </if>
        </foreach>
      </trim>
    </trim>
    where project_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.projectId} 
    </foreach>
  </update>
</mapper>